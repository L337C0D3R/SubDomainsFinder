name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Get modified files
        id: changes
        run: |
          if git rev-parse HEAD^ >/dev/null 2>&1; then
            git diff --name-only HEAD^ HEAD > modified_files.txt
          else
            git diff --name-only HEAD > modified_files.txt
          fi
          echo "files=$(cat modified_files.txt | tr '\n' ' ')" >> $GITHUB_ENV

      - name: Send Telegram Update
        if: success()  # Only run this step if all previous steps were successful
        run: |
          curl --request GET \
          --url "https://api.telegram.org/bot7149260415:AAHkMU6JwIBeQWUl_sP7OUg0l2z4r9QcJx8/sendMessage?chat_id=380215667&text=Status:%20Deployment%20successful.%0ADeployment%20ID:%20${{ github.run_id }}.%0AModified%20Files:%0A${{ env.files }}."
