name: Deploy static content to Pages
on:
  push:
    branches: ["main"]
  workflow_dispatch:
permissions:
  contents: read
  pages: write
  id-token: write
concurrency:
  group: "pages"
  cancel-in-progress: false
jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      # ... (previous steps remain unchanged)
      
      - name: Format URLs for Purging
        id: format_urls
        run: |
          base_url="https://subdomainfinder.in"
          echo "Web files to process:"
          echo "$WEB_FILES"
          urls=$(echo "$WEB_FILES" | while read -r file; do
            if [[ -n "$file" ]]; then
              if [[ "$file" == "index.html" ]]; then
                echo "$base_url/"
                echo "$base_url/index.html"
              else
                echo "$base_url/$file"
              fi
            fi
          done | jq -R -s 'split("\n") | map(select(length > 0))' | jq -c .)
          echo "urls=$urls" >> $GITHUB_OUTPUT
          echo "Files to purge: $urls"
      
      - name: Purge Modified Files from Cloudflare Cache
        run: |
          urls='${{ steps.format_urls.outputs.urls }}'
          echo "Received urls: $urls"
          if [ "$urls" != "[]" ] && [ -n "$urls" ]; then
            json_data="{\"files\":$urls}"
            echo "JSON payload being sent to Cloudflare: $json_data"
            curl --request POST \
              --url https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_ZONE_ID }}/purge_cache \
              --header 'Content-Type: application/json' \
              --header 'Authorization: Bearer ${{ secrets.CLOUDFLARE_API_TOKEN }}' \
              --data "$json_data"
          else
            echo "No relevant files to purge."
          fi
