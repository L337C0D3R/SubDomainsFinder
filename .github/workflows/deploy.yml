name: Deploy static content to Pages

on:
  push:
    branches: ["main"]

  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Get Modified Files
        id: git_diff
        run: |
          if git rev-parse HEAD^ >/dev/null 2>&1; then
            git diff --name-only HEAD^ HEAD > modified_files.txt
          else
            git ls-files > modified_files.txt
          fi

      - name: Format URLs for Purging
        id: format_urls
        run: |
          base_url="${{ secrets.BASE_URL }}"
          urls=$(sed "s|^|$base_url|" modified_files.txt)
          echo "::set-output name=urls::$(echo $urls | jq -R -s -c 'split("\n")')"

      - name: Purge Modified Files from Cloudflare Cache
        run: |
          curl --request POST \
          --url https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_ZONE_ID }}/purge_cache \
          --header 'Content-Type: application/json' \
          --header 'Authorization: Bearer ${{ secrets.CLOUDFLARE_API_TOKEN }}' \
          --data '{"files":'${{ steps.format_urls.outputs.urls }}'}'
